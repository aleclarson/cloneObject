// Generated by CoffeeScript 1.12.4
var Cloneable, Either, PureObject, assertType, cloneObject, isType, mergeDeep, mergeShallow;

PureObject = require("PureObject");

assertType = require("assertType");

Either = require("Either");

isType = require("isType");

Cloneable = Either(Object, PureObject);

module.exports = cloneObject = function(obj, options) {
  var clone;
  if (options == null) {
    options = {};
  }
  assertType(obj, Cloneable);
  assertType(options, Object);
  clone = isType(obj, Object) ? {} : Object.create(null);
  if (options.recursive) {
    return mergeDeep(clone, obj);
  } else {
    return mergeShallow(clone, obj);
  }
};

mergeDeep = function(clone, obj) {
  var key, value;
  for (key in obj) {
    value = obj[key];
    clone[key] = isType(value, Object) ? mergeDeep({}, value) : value;
  }
  return clone;
};

mergeShallow = function(clone, obj) {
  var key, value;
  for (key in obj) {
    value = obj[key];
    clone[key] = value;
  }
  return clone;
};
